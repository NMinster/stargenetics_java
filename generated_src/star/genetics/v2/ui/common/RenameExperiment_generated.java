/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package star.genetics.v2.ui.common;

abstract class RenameExperiment_generated extends star.genetics.v2.ui.common.Button implements star.event.EventController, star.event.Listener, star.genetics.v1.ui.events.CrateNewCrateRaiser
{
	private star.event.Adapter adapter;
	private static final long serialVersionUID = 1L;

	public  RenameExperiment_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		super.addNotify();
		getAdapter().addHandled( star.genetics.v1.ui.events.CrateNewCrateEvent.class );
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "star.genetics.v1.ui.events.CrateNewCrateEvent" ) && event.isValid() ) 
		{
			 long start = System.nanoTime();
			
			handleLoadModel( (star.genetics.v1.ui.events.CrateNewCrateRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleLoadModel "  + ( end-start )/1000000 ); } 
		}
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	abstract void handleLoadModel(star.genetics.v1.ui.events.CrateNewCrateRaiser CrateNewCrateRaiser);
	 
	public void raise_CrateNewCrateEvent()
	{
		(new star.genetics.v1.ui.events.CrateNewCrateEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
		getAdapter().removeHandled( star.genetics.v1.ui.events.CrateNewCrateEvent.class );
	}
	 
}